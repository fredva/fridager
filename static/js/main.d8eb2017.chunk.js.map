{"version":3,"sources":["datefunctions.js","Rapport.js","Fridager.js","App.js","index.js"],"names":["isWorkday","day","dayOfWeek","year","month","dayIndex","Date","getDay","Rapport","_ref","numberOfHolidays","countHolidays","react_default","a","createElement","Fridager","currentYear","getFullYear","years","Object","toConsumableArray","Array","map","_","i","App","ReactDOM","render","src_App","document","getElementById"],"mappings":"wKAAA,SAASA,EAAUC,GACjB,OAAOA,GAAO,GAAKA,GAAO,EAG5B,SAASC,EAAUC,EAAMC,EAAOH,GAC9B,IAAMI,EAAW,IAAIC,KAAKH,EAAMC,EAAQ,EAAGH,GAAKM,SAChD,OAAiB,IAAbF,EACK,EAEFA,ECLM,SAASG,EAATC,GAA2B,IAARN,EAAQM,EAARN,KAC1BO,EDOR,SAAuBP,GASrB,OAReH,EAAUE,EAAUC,EAAM,EAAG,IAC7BH,EAAUE,EAAUC,EAAM,EAAG,IAC5BH,EAAUE,EAAUC,EAAM,EAAG,KAC7BH,EAAUE,EAAUC,EAAM,GAAI,KAC9BH,EAAUE,EAAUC,EAAM,GAAI,KAC9BH,EAAUE,EAAUC,EAAM,GAAI,KAC9BH,EAAUE,EAAUC,EAAM,GAAI,KCdrBQ,CAAcR,GACvC,OACES,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGX,EADH,KACWO,ICNF,SAASK,IACtB,IAAMC,GAAc,IAAIV,MAAOW,cACzBC,EAAQC,OAAAC,EAAA,EAAAD,CAAIE,MAAM,KAAKC,IAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAIR,IAC/C,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACCI,EAAMI,IAAI,SAAAnB,GAAI,OACbS,EAAAC,EAAAC,cAACN,EAAD,CAASL,KAAMA,OCERsB,MARf,WACE,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAD,QCHNW,IAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d8eb2017.chunk.js","sourcesContent":["function isWorkday(day) {\n  return day >= 1 && day <= 5;\n}\n\nfunction dayOfWeek(year, month, day) {\n  const dayIndex = new Date(year, month - 1, day).getDay();\n  if (dayIndex === 0) {\n    return 7;\n  }\n  return dayIndex;\n}\n\nfunction countHolidays(year) {\n  const jan1st = isWorkday(dayOfWeek(year, 1, 1));\n  const may1st = isWorkday(dayOfWeek(year, 5, 1));\n  const may17th = isWorkday(dayOfWeek(year, 5, 17));\n  const dec24th = isWorkday(dayOfWeek(year, 12, 24));\n  const dec25th = isWorkday(dayOfWeek(year, 12, 25));\n  const dec26th = isWorkday(dayOfWeek(year, 12, 26));\n  const dec31st = isWorkday(dayOfWeek(year, 12, 31));\n\n  return jan1st + may1st + may17th + dec24th + dec25th + dec26th + dec31st;\n}\n\nexport { isWorkday, dayOfWeek, countHolidays };\n","import React from \"react\";\n\nimport { countHolidays } from \"./datefunctions\";\n\nexport default function Rapport({ year }) {\n  const numberOfHolidays = countHolidays(year);\n  return (\n    <div>\n      <h2>\n        {year}: {numberOfHolidays}\n      </h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Rapport from \"./Rapport\";\n\nexport default function Fridager() {\n  const currentYear = new Date().getFullYear();\n  const years = [...Array(10)].map((_, i) => i + currentYear);\n  return (\n    <div>\n      <h1>Fridager</h1>\n      {years.map(year => (\n        <Rapport year={year} />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Fridager from \"./Fridager\"\n\nfunction App() {\n  return (\n    <div>\n      <Fridager/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}